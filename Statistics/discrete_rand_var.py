from numpy import array, sum, sqrt


def calc_expectation(x, p):
    """
  Вычисляет математическое ожидание, дисперсию и среднеквадратическое отклонение
  дискретной случайной величины.

  Параметры:
  ----------
  x : list или array-like
      Массив возможных значений случайной величины
  p : list или array-like
      Массив соответствующих вероятностей

  Возвращает:
  ----------
  tuple: (Mx, Dx, sigma)
      Mx : float
          Математическое ожидание
      Dx : float
          Дисперсия случайной величины
      sigma : float
          Среднеквадратическое отклонение


  """
    # Преобразуем входные данные в numpy массивы
    X = array(x)
    P = array(p)

    # Проверка корректности входных данных
    if len(X) != len(P):
        raise ValueError("Количество значений и вероятностей должно совпадать")
    if not all(0 <= prob <= 1 for prob in P):
        raise ValueError("Вероятности должны быть в диапазоне [0, 1]")
    if not abs(sum(P) - 1) < 1e-10:
        raise ValueError("Сумма вероятностей должна равняться 1")

    # Вычисление характеристик
    Mx = round(sum(X * P), 10)  # Математическое ожидание
    Dx = round(sum(X ** 2 * P) - Mx ** 2, 10)  # Дисперсия
    sigma = round(sqrt(Dx), 10)  # СКО

    return Mx, Dx, sigma


# Пример использования
if __name__ == "__main__":
    result = calc_expectation([2, 3, 4, 5], [0.125, 0.375, 0.375, 0.125])
    print(f"Математическое ожидание: {result[0]}")
    print(f"Дисперсия: {result[1]}")
    print(f"Среднеквадратическое отклонение: {result[2]}")